// <auto-generated />
namespace freezerbot.Migrations

open System
open Microsoft.EntityFrameworkCore
open Microsoft.EntityFrameworkCore.Infrastructure
open Microsoft.EntityFrameworkCore.Metadata
open Microsoft.EntityFrameworkCore.Migrations
open Microsoft.EntityFrameworkCore.Storage.ValueConversion
open Npgsql.EntityFrameworkCore.PostgreSQL.Metadata

[<DbContext(typeof<RepositoryModel.RepositoryContext>)>]
[<Migration("20230518160053_Initial")>]
type Initial() =
    inherit Migration()

    override this.Up(migrationBuilder:MigrationBuilder) =
        migrationBuilder.CreateTable(
            name = "Repositories"
            ,columns = (fun table -> 
            {|
                Name =
                    table.Column<string>(
                        nullable = false
                        ,``type`` = "text"
                    )
                Frozen =
                    table.Column<bool>(
                        nullable = false
                        ,``type`` = "boolean"
                    )
            |})
            , constraints =
                (fun table -> 
                    table.PrimaryKey("PK_Repositories", (fun x -> (x.Name) :> obj)
                    ) |> ignore
                )
        ) |> ignore

        migrationBuilder.CreateTable(
            name = "UnfreezeRequests"
            ,columns = (fun table -> 
            {|
                Id =
                    table.Column<int>(
                        nullable = false
                        ,``type`` = "integer"
                    ).Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                RepositoryName =
                    table.Column<string>(
                        nullable = false
                        ,``type`` = "text"
                    )
                Branch =
                    table.Column<string>(
                        nullable = false
                        ,``type`` = "text"
                    )
            |})
            , constraints =
                (fun table -> 
                    table.PrimaryKey("PK_UnfreezeRequests", (fun x -> (x.Id) :> obj)
                    ) |> ignore
                    table.ForeignKey(
                        name = "FK_UnfreezeRequests_Repositories_RepositoryName"
                        ,column = (fun x -> (x.RepositoryName) :> obj)
                        ,principalTable = "Repositories"
                        ,principalColumn = "Name"
                        ) |> ignore

                )
        ) |> ignore

        migrationBuilder.CreateTable(
            name = "Approvals"
            ,columns = (fun table -> 
            {|
                Id =
                    table.Column<int>(
                        nullable = false
                        ,``type`` = "integer"
                    ).Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                User =
                    table.Column<string>(
                        nullable = false
                        ,``type`` = "text"
                    )
                RequestId =
                    table.Column<int>(
                        nullable = true
                        ,``type`` = "integer"
                    )
            |})
            , constraints =
                (fun table -> 
                    table.PrimaryKey("PK_Approvals", (fun x -> (x.Id) :> obj)
                    ) |> ignore
                    table.ForeignKey(
                        name = "FK_Approvals_UnfreezeRequests_RequestId"
                        ,column = (fun x -> (x.RequestId) :> obj)
                        ,principalTable = "UnfreezeRequests"
                        ,principalColumn = "Id"
                        ) |> ignore

                )
        ) |> ignore

        migrationBuilder.CreateIndex(
            name = "IX_Approvals_RequestId"
            ,table = "Approvals"
            ,column = "RequestId"
            ) |> ignore

        migrationBuilder.CreateIndex(
            name = "IX_UnfreezeRequests_RepositoryName"
            ,table = "UnfreezeRequests"
            ,column = "RepositoryName"
            ) |> ignore


    override this.Down(migrationBuilder:MigrationBuilder) =
        migrationBuilder.DropTable(
            name = "Approvals"
            ) |> ignore

        migrationBuilder.DropTable(
            name = "UnfreezeRequests"
            ) |> ignore

        migrationBuilder.DropTable(
            name = "Repositories"
            ) |> ignore


    override this.BuildTargetModel(modelBuilder: ModelBuilder) =
        modelBuilder
            .HasAnnotation("ProductVersion", "6.0.16")
            .HasAnnotation("Relational:MaxIdentifierLength", 63) |> ignore

        modelBuilder.Entity("RepositoryModel+Approval", (fun b ->

            b.Property<int>("Id")
                .IsRequired(true)
                .ValueGeneratedOnAdd()
                .HasColumnType("integer")
                |> ignore

            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id")) |> ignore

            b.Property<Nullable<int>>("RequestId")
                .IsRequired(false)
                .HasColumnType("integer")
                |> ignore

            b.Property<string>("User")
                .IsRequired(true)
                .HasColumnType("text")
                |> ignore

            b.HasKey("Id")
                |> ignore


            b.HasIndex("RequestId")
                |> ignore

            b.ToTable("Approvals") |> ignore

        )) |> ignore

        modelBuilder.Entity("RepositoryModel+Repository", (fun b ->

            b.Property<string>("Name")
                .IsRequired(true)
                .HasColumnType("text")
                |> ignore

            b.Property<bool>("Frozen")
                .IsRequired(true)
                .HasColumnType("boolean")
                |> ignore

            b.HasKey("Name")
                |> ignore


            b.ToTable("Repositories") |> ignore

        )) |> ignore

        modelBuilder.Entity("RepositoryModel+UnfreezeRequest", (fun b ->

            b.Property<int>("Id")
                .IsRequired(true)
                .ValueGeneratedOnAdd()
                .HasColumnType("integer")
                |> ignore

            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id")) |> ignore

            b.Property<string>("Branch")
                .IsRequired(true)
                .HasColumnType("text")
                |> ignore

            b.Property<string>("RepositoryName")
                .IsRequired(true)
                .HasColumnType("text")
                |> ignore

            b.HasKey("Id")
                |> ignore


            b.HasIndex("RepositoryName")
                |> ignore

            b.ToTable("UnfreezeRequests") |> ignore

        )) |> ignore
        modelBuilder.Entity("RepositoryModel+Approval", (fun b ->
            b.HasOne("RepositoryModel+UnfreezeRequest", "Request")
                .WithMany()
                .HasForeignKey("RequestId")
                |> ignore

        )) |> ignore
        modelBuilder.Entity("RepositoryModel+UnfreezeRequest", (fun b ->
            b.HasOne("RepositoryModel+Repository", "Repository")
                .WithMany()
                .HasForeignKey("RepositoryName")
                |> ignore

        )) |> ignore

